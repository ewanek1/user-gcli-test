name: Slack CLI Command Runner

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      command:
        description: 'Slack CLI command to run'
        required: true
        type: string
      verbose:
        description: 'Verbose flag'
        type: boolean
        default: false
      cli_version:
        description: 'CLI version'
        required: false
        type: string
        default: "latest"
      app_id: 
        description: "App ID"
        required: false
        type: string
        
env:
  SLACK_DISABLE_TELEMETRY: "true"

jobs:
  run-slack-cli: 
    permissions:
      contents: read
    #runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      success: ${{ steps.run-slack-cli-command.outputs.success }}
      command_executed: ${{ steps.run-slack-cli-command.outputs.command_executed }}
      stdout: ${{ steps.run-slack-cli-command.outputs.stdout }}
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Slack CLI
        run: |
          if [ "${{ github.event.inputs.cli_version }}" = "latest" ]; then
            curl -fsSL https://downloads.slack-edge.com/slack-cli/install.sh | bash
          else
            curl -fsSL https://downloads.slack-edge.com/slack-cli/install.sh | bash -s -- --version ${{ github.event.inputs.cli_version }}
          fi
          echo "$HOME/.slack/bin" >> $GITHUB_PATH
      
      - name: Run Slack CLI Command
        id: run-slack-cli-command
        run: |
          if [ "${{ github.event.inputs.verbose }}" = "true" ]; then
            echo "Running command: ${{ github.event.inputs.command }}"
          fi
          
          if [ -n "${{ github.event.inputs.app_id }}" ]; then
            export SLACK_APP_ID="${{ github.event.inputs.app_id }}"
          fi
          
          export SLACK_SERVICE_TOKEN="${{ secrets.SLACK_SERVICE_TOKEN }}"
          export SLACK_BOT_TOKEN="${{ secrets.SLACK_BOT_TOKEN }}"
          
          # Run the command and capture output
          if output=$(slack ${{ github.event.inputs.command }} 2>&1); then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "command_executed=${{ github.event.inputs.command }}" >> $GITHUB_OUTPUT
            echo "stdout<<EOF" >> $GITHUB_OUTPUT
            echo "$output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "command_executed=${{ github.event.inputs.command }}" >> $GITHUB_OUTPUT
            echo "stdout<<EOF" >> $GITHUB_OUTPUT
            echo "$output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            exit 1
          fi